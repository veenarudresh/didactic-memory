import tkinter as tk
from tkinter import messagebox

tasks = []


def add_task():
    task_content = task_entry.get()
    if task_content:
        task_var = tk.BooleanVar()
        tasks.append({"task": task_content, "completed": task_var})
        refresh_tasks()
        task_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Input Error","Oops!, Enter a task.")


def mark_task_completed(task_index):
    tasks[task_index]["completed"].set(True)
    refresh_tasks()


def delete_completed_tasks():
    global tasks
    tasks = [task for task in tasks if not task["completed"].get()]
    refresh_tasks()


def refresh_tasks():
    for widget in inner_frame.winfo_children():
        widget.destroy()

    uncompleted_tasks = [task for task in tasks if not task["completed"].get()]
    completed_tasks = [task for task in tasks if task["completed"].get()]

    sorted_tasks = uncompleted_tasks + completed_tasks

    for i, task in enumerate(sorted_tasks):
        task_frame = tk.Frame(inner_frame, bg='#000000')  
        task_frame.pack(fill='x', pady=5)

        chk = tk.Checkbutton(task_frame, variable=task["completed"], bg='#000000', onvalue=True, offvalue=False)
        chk.pack(side='left', padx=10)
        chk.config(command=lambda i=i: mark_task_completed(i))

        task_label = tk.Label(task_frame, text=task["task"], font=("Comic Sans MS", 12), bg='#FFFFE0')
        task_label.pack(side='left')

    canvas.configure(scrollregion=canvas.bbox("all"))


app = tk.Tk()
app.title("To-Do List ")
app.geometry("400x500")


app.configure(bg='#000000')


task_label = tk.Label(app, text="To-Do'süìù:", font=("Comic Sans MS", 12), bg='#FFFFE0')  
task_label.pack(pady=10)

task_entry = tk.Entry(app, width=35, font=("Comic Sans MS", 14), bg='#fff2e4')
task_entry.pack(pady=5)

add_button = tk.Button(app, text="Addüåû", width=20, font=("Comic Sans MS", 12), bg='#FFFFE0', fg="black", command=add_task)
add_button.pack(pady=10)

delete_completed_button = tk.Button(app, text="Delete‚ö°", width=20, font=("Comic Sans MS", 12), bg="#FFFFE0", fg="black", command=delete_completed_tasks)
delete_completed_button.pack(pady=5)


tasks_frame = tk.Frame(app, bg='#000000') 
tasks_frame.pack(pady=10, fill='both', expand=True)

canvas = tk.Canvas(tasks_frame, bg='#000000')  
canvas.pack(side='left', fill='both', expand=True)

scrollbar = tk.Scrollbar(tasks_frame, orient="vertical", command=canvas.yview)
scrollbar.pack(side='right', fill='y')

canvas.configure(yscrollcommand=scrollbar.set)

inner_frame = tk.Frame(canvas, bg='#000000')  
canvas.create_window((0, 0), window=inner_frame, anchor="nw")

inner_frame.bind("<Configure>", lambda event: canvas.configure(scrollregion=canvas.bbox("all")))


app.mainloop()
